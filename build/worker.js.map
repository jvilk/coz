{"version":3,"file":"worker.js","sources":["../obj/worker/worker.js"],"sourcesContent":["importScripts('/lib/pako/pako_inflate.min.js');\nvar SAMPLES = 512;\n/**\n * Resample of data.length data points from data with replacement.\n */\nfunction resample(data) {\n    var len = data.length;\n    var sample = new Array(len);\n    for (var i = 0; i < len; i++) {\n        sample[i] = data[(Math.random() * len) | 0];\n    }\n    return sample;\n}\n/**\n * Draw m samples from the distribution formed by applying f to data1 and data2 resampled with replacement.\n */\nfunction getSampleDistribution(m, data1, data2, f) {\n    var rv = new Array(m);\n    for (var i = 0; i < m; i++) {\n        rv[i] = f(resample(data1), resample(data2));\n    }\n    return rv;\n}\nfunction calculateThroughput(data) {\n    var duration = 0;\n    var delta = 0;\n    var len = data.length;\n    for (var i = 0; i < len; i++) {\n        var p = data[i];\n        duration += p.duration;\n        delta += p.delta;\n    }\n    return duration / delta;\n}\nfunction calculateLatency(data) {\n    var arrivals = 0;\n    var departures = 0;\n    var duration = 0;\n    var difference = 0;\n    var len = data.length;\n    for (var i = 0; i < len; i++) {\n        var p = data[i];\n        arrivals += p.arrivals;\n        departures += p.departures;\n        if (duration === 0) {\n            difference = p.difference;\n        }\n        else {\n            // Compute the new total duration of all experiments combined (including the new one)\n            var total_duration = p.duration + duration;\n            // Scale the difference down by the ratio of the prior and total durations. This scale factor will be closer to 1 than 0, so divide first for better numerical stability\n            difference *= duration / total_duration;\n            // Add the contribution to average difference from the current experiment. The scale factor will be close to zero, so multiply first for better numerical stability.\n            difference += (p.difference * duration) / total_duration;\n        }\n        // Update the total duration\n        duration += p.duration;\n    }\n    var arrivalRate = arrivals / duration;\n    // Average latency, according to Little's Law.\n    return difference / arrivalRate;\n}\nfunction getSpeedupValue(baseline, comparison) {\n    return (baseline - comparison) / baseline;\n}\nfunction calculateThroughputSpeedup(baseline, comparison) {\n    return getSpeedupValue(calculateThroughput(baseline), calculateThroughput(comparison));\n}\nfunction calculateLatencySpeedup(baseline, comparison) {\n    return getSpeedupValue(calculateLatency(baseline), calculateLatency(comparison));\n}\nfunction sorter(a, b) {\n    return a - b;\n}\nfunction calculateSpeedupInternal(baseline, comparison, calculateSpeedup) {\n    var rawSpeedup = calculateSpeedup(baseline, comparison);\n    if (baseline.length === 1 && comparison.length === 1) {\n        return {\n            value: rawSpeedup,\n            conf_left: rawSpeedup,\n            conf_right: rawSpeedup\n        };\n    }\n    var sampleDist = getSampleDistribution(SAMPLES, baseline, comparison, calculateSpeedup)\n        .sort(sorter);\n    // Calculate 95% confidence interval.\n    var left = sampleDist[(0.025 * SAMPLES) | 0];\n    var right = sampleDist[(0.97 * SAMPLES) | 0];\n    return {\n        value: rawSpeedup,\n        conf_left: left,\n        conf_right: right\n    };\n}\nfunction calculateSpeedup(type, baseline, comparison) {\n    switch (type) {\n        case 'throughput':\n            return calculateSpeedupInternal(baseline, comparison, calculateThroughputSpeedup);\n        case 'latency':\n            return calculateSpeedupInternal(baseline, comparison, calculateLatencySpeedup);\n    }\n}\nfunction parseLine(s) {\n    var parts = s.split('\\t');\n    var obj = { type: parts[0] };\n    for (var i = 0; i < parts.length; i++) {\n        var equals_index = parts[i].indexOf('=');\n        if (equals_index === -1)\n            continue;\n        var key = parts[i].substring(0, equals_index);\n        var value = parts[i].substring(equals_index + 1);\n        switch (key) {\n            case 'type':\n                if (obj.type === 'progress-point') {\n                    key = 'point-type';\n                }\n                break;\n            case 'delta':\n            case 'time':\n            case 'duration':\n            case 'arrivals':\n            case 'departures':\n            case 'difference':\n                value = parseInt(value, 10);\n                break;\n            case 'speedup':\n                value = parseFloat(value);\n                break;\n        }\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction getInitialLatencyData() {\n    return {\n        type: 'latency',\n        speedup: null,\n        points: new Array()\n    };\n}\nfunction getInitialThroughputData() {\n    return {\n        type: 'throughput',\n        speedup: null,\n        points: new Array()\n    };\n}\nfunction getDataForExperiment(data, location, progressPoint, speedup, getInitialData) {\n    var locData = data[location];\n    if (!locData) {\n        data[location] = locData = {};\n    }\n    var pointData = locData[progressPoint];\n    if (!pointData) {\n        locData[progressPoint] = pointData = {};\n    }\n    var speedupData = pointData[speedup];\n    if (!speedupData) {\n        pointData[speedup] = speedupData = getInitialData();\n    }\n    return speedupData;\n}\nvar LINES_PER_UPDATE = 1000;\nfunction parseFile(fileNum, totalFiles, f, profileData, startPercent, endPercent) {\n    // Note: f may be very large. We avoid calling split() on it.\n    var len = f.length;\n    var lineStart = 0;\n    var experiment = null;\n    var counter = 0;\n    var lastUpdate = performance.now();\n    var valuePerChar = len / (endPercent - startPercent);\n    // Note: Iterate to <= len; special case when i === len.\n    for (var i = 0; i <= len; i++) {\n        if (i === len || f[i] === '\\n') {\n            var line = parseLine(f.slice(lineStart, i));\n            if (line && line.type) {\n                switch (line.type) {\n                    case 'experiment':\n                        experiment = line;\n                        break;\n                    case 'throughput-point':\n                    case 'progress-point': {\n                        // Ignore data points of 0.\n                        if (line.delta > 0) {\n                            var d = getDataForExperiment(profileData, experiment.selected, line.name, experiment.speedup, getInitialThroughputData);\n                            d.points.push({\n                                delta: line.delta,\n                                duration: experiment.duration\n                            });\n                        }\n                        break;\n                    }\n                    case 'latency-point':\n                        if ((line.arrivals + line.departures + line.difference) > 0) {\n                            var d = getDataForExperiment(profileData, experiment.selected, line.name, experiment.speedup, getInitialThroughputData);\n                            d.points.push({\n                                arrivals: line.arrivals,\n                                departures: line.departures,\n                                difference: line.difference,\n                                duration: experiment.duration\n                            });\n                        }\n                        break;\n                }\n            }\n            lineStart = i + 1;\n            counter--;\n            if (counter <= 0) {\n                counter = LINES_PER_UPDATE;\n                var now = performance.now();\n                if (now - lastUpdate > 10) {\n                    lastUpdate = now;\n                    sendProgressMessage(startPercent + (valuePerChar * i), \"Profile \" + fileNum + \"/\" + totalFiles + \", processed byte \" + i + \"/\" + len + \"...\");\n                }\n            }\n        }\n    }\n}\nfunction parseProfile(profiles) {\n    var numProfiles = profiles.length;\n    var profileData = {};\n    var reader = new FileReaderSync();\n    var profileValue = 70 / numProfiles;\n    var profile = profiles[0];\n    var isCompressed = false;\n    if (profile instanceof File) {\n        isCompressed = profile.name.endsWith(\".gz\");\n    }\n    var profileString;\n    if (isCompressed) {\n        profileString = reader.readAsText(new Blob([pako.inflate(new Uint8Array(reader.readAsArrayBuffer(profiles[0]))).buffer]), \"UTF-8\");\n    }\n    else {\n        profileString = reader.readAsText(profiles[0], \"UTF-8\");\n    }\n    for (var i = 0; i < numProfiles; i++) {\n        parseFile(i + 1, numProfiles, profileString, profileData, profileValue * i, profileValue * (i + 1));\n    }\n    var locations = Object.keys(profileData);\n    var numLocations = locations.length;\n    var speedupsCalculated = 0;\n    var lastUpdate = performance.now();\n    var locationValue = 30 / numLocations;\n    // Code region\n    for (var i = 0; i < numLocations; i++) {\n        var location_1 = locations[i];\n        var locationData = profileData[location_1];\n        var progressPoints = Object.keys(locationData);\n        // Progress Point\n        for (var _i = 0, progressPoints_1 = progressPoints; _i < progressPoints_1.length; _i++) {\n            var progressPoint = progressPoints_1[_i];\n            var ppData = locationData[progressPoint];\n            var baseline = ppData[0];\n            // Ignore data that lacks a baseline.\n            if (baseline) {\n                var type = baseline.type;\n                // Compare baseline with itself to form confidence bounds.\n                baseline.speedup = calculateSpeedup(type, baseline.points, baseline.points);\n                var speedups = Object.keys(ppData).map(function (k) { return parseFloat(k); });\n                // speedups\n                for (var _a = 0, speedups_1 = speedups; _a < speedups_1.length; _a++) {\n                    var speedup = speedups_1[_a];\n                    if (speedup !== 0) {\n                        var speedupData = ppData[speedup];\n                        speedupData.speedup = calculateSpeedup(type, baseline.points, speedupData.points);\n                        speedupsCalculated++;\n                    }\n                }\n            }\n        }\n        var now = performance.now();\n        // Send updates every 5 ms.\n        if ((now - lastUpdate) > 5) {\n            sendProgressMessage(70 + (locationValue * (i + 1)), \"Calculating speedups for \" + location_1 + \" (\" + (i + 1) + \"/\" + numLocations + \")...\");\n            lastUpdate = now;\n        }\n    }\n    return profileData;\n}\n/**\n * Listen for commands from UI.\n */\nself.addEventListener('message', function (e) {\n    var data = e.data;\n    switch (data.type) {\n        case 'files':\n            console.profile('ParseProfile');\n            try {\n                var profileData = parseProfile(data.files);\n                sendMessage({\n                    type: 'data',\n                    data: profileData\n                });\n            }\n            catch (e) {\n                sendMessage({\n                    type: 'error',\n                    msg: e.message,\n                    stack: e.stack\n                });\n            }\n            console.profileEnd();\n    }\n}, false);\n/**\n * Send a message to the UI.\n * (Note: We do not call postMessage directly for type checking purposes.)\n */\nfunction sendMessage(msg) {\n    self.postMessage(msg);\n}\nfunction sendProgressMessage(percent, msg) {\n    //console.log(`[${percent}%]: ${msg}`);\n    sendMessage({\n        type: 'progress',\n        percent: percent,\n        msg: msg\n    });\n}\n//# sourceMappingURL=worker.js.map"],"names":[],"mappings":"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"}